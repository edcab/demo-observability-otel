version: '3.8'

services:
#  api1:
#    build: ./demo-service/docker/.  # Ruta al Dockerfile de api1
#    ports:
#      - "8081:8081"  # Mapeo de puertos
#    networks:
#      - my_network  # Nombre de la red
#  api2:
#    build: ./child-service/docker/.  # Ruta al Dockerfile de api2
#    ports:
#      - "8082:8082"  # Mapeo de puertos
#    networks:
#      - my_network  # Nombre de la red

  jaeger:
    image: jaegertracing/all-in-one:1.9
    ports:
      - '16686:16686'
      - '14250:14250'
      - '6831:6831/udp'

#  zipkin:
#    image: openzipkin/zipkin
#    ports:
#      - '9411:9411'
#
#  prometheus:
#    image: prom/prometheus:v2.1.0
#    volumes:
#      - ./prometheus/:/etc/prometheus/
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'
#      - '--web.listen-address=:8080'
#    ports:
#      - '9092:8080'
#    extra_hosts:
#      - "host.docker.internal:host-gateway"

volumes:
  db:
    driver: local
  prometheus_data:
    driver: local

networks:
  my_network:  # Definici√≥n de la red
    driver: bridge